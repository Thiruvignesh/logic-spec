logic:
  # API task with optional apiURI
  - api: Fetch user data  # [@backend]
    apiURI: 'https://api.example.com/users/{{userId}}'  # Optional field
  
  # API task without apiURI (valid since apiURI is optional)
  - api: Log user activity  # [@backend]
  
  # UI task with optional uiURI
  - ui: Update profile page  # [@frontend]
    uiURI: 'https://figma.com/project/{{profilePageId}}'  # Optional field

  # UI task without uiURI (valid since uiURI is optional)
  - ui: Display settings page  # [@frontend]
  
  # SQL task with optional query and parameters
  - sql: Insert order data  # [@backend]
    query: |
      INSERT INTO orders (id, userId, total) VALUES (?, ?, ?)
    parameters:
      - orderId
      - userId
      - totalPrice  # Optional parameters
    
  # SQL task without query (valid since query is optional)
  - sql: Update user preferences  # [@backend]
  
  # Cache task with key, value, and expiry
  - cache: Set user session  # [@backend]
    key: userSession_{{userId}}  # Optional field
    value: sessionData
    expiry: 3600  # Cache expiry in seconds

  # Cache task without key (valid since key is optional)
  - cache: Invalidate session cache  # [@backend]
  
  # State update task
  - state: userLoggedIn = true  # [@backend]

  # Generic task without specific properties
  - task: Log user interaction  # [@backend]
  
  # If-Then-Else block (else block is optional)
  - if: userLoggedIn == true  # [@backend]
    then:
      - task: Load user dashboard  # [@frontend]
    else:
      - task: Redirect to login page  # [@frontend]

  # For loop
  - for: item in cart.items  # [@backend]
    do:
      - state: totalPrice += item.price  # [@backend]

  # Switch statement with cases
  - switch: userRole  # [@backend]
    cases:
      admin:
        - task: Load admin panel  # [@frontend]
      user:
        - task: Load user dashboard  # [@frontend]
    default:
      - task: Load default dashboard  # [@frontend]
  
states:
  userLoggedIn:
    initial_value: false
    description: "Tracks whether the user is logged in"

  userProfile:
    initial_value: {}
    description: "Holds the user's profile data"

  cart:
    initial_value:
      items: []
      totalPrice: 0.0
    description: "Tracks the shopping cart and total price"

  sessionData:
    initial_value: null
    description: "Stores session data for the user"

  orderId:
    initial_value: null
    description: "The order ID for the current order"